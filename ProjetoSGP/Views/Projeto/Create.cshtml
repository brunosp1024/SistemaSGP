@model ProjetoSGP.Models.Projeto

@{
    ViewBag.Title = "Create";
}

<form class="form-horizontal" id="formCadastroRecurso" name="formCadastroRecurso" method="post">
    @Html.AntiForgeryToken()
    <h2 style="color: black">Cadastrar Projeto</h2>

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" name="nome" class="nome form-control" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime" name="data" class="data form-control" placeholder="dd/MM/AAAA" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", ViewBag.Status as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValorContrato, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" name="valor" class="valor form-control" />
        </div>
    </div>

    <hr />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="margin-left: 500px">
            <input type="submit" value="Cadastrar" class="btn btn-default" /> |
            <button class="btn btn-default">@Html.ActionLink("Voltar", "Index")</button>
        </div>
    </div>
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    $('.data').mask('00/00/0000');

    $('.valor').mask('#.##0,00', { reverse: true });

    $("#formCadastroRecurso").validate({
        rules: {
            nome: {
                required: true,
                maxlength: 100,
                minlength: 10,
            },
            data: {
                required: true,
                date: true
            },
            status: {
                required: true
            },
            valor: {
                required: true
            }
        }
    })
</script>
